<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:context = "http://www.springframework.org/schema/context"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	

	<bean id="handlerLookup" class="com.example.jms.controller.HandlerLookup" factory-method="getInstance"/>
    <!--
 	<bean id="connectionFactory" class="org.hornetq.jms.client.HornetQJMSConnectionFactory">
    	<constructor-arg value="false"/>
	    <constructor-arg>
	        <bean name="transportConfiguration" class="org.hornetq.api.core.TransportConfiguration">
	            <constructor-arg value="org.hornetq.core.remoting.impl.netty.NettyConnectorFactory" />
	            <constructor-arg>
	                <map key-type="java.lang.String" value-type="java.lang.Object">
	                    <entry key="host" value="127.0.0.1" />
	                    <entry key="port" value="5445" />
	                </map>
	            </constructor-arg>
	        </bean>
	    </constructor-arg>
	 </bean>
    -->
	<bean id = "jndiTemplate" class = "org.springframework.jndi.JndiTemplate">
        <property name = "environment">
            <props>
                <prop key = "java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
                <prop key = "java.naming.provider.url">remote://localhost:4447</prop>
                <prop key = "java.naming.security.principal">username</prop>
                <prop key = "java.naming.security.credentials">password</prop>
            </props>
        </property>
    </bean>

    <bean id="jndiConnectionFactory"
          class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate"
                  ref="jndiTemplate" />
        <property name="jndiName">
            <value>jms/RemoteConnectionFactory</value>
        </property>
    </bean>

    <bean id="connectionFactory" class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
        <property name="targetConnectionFactory" ref="jndiConnectionFactory"/>
        <property name="username" value="username"/>
        <property name="password" value="password"/>
    </bean>
    	 
	 <bean id = "jmsDestinationResolver" class = "org.springframework.jms.support.destination.JndiDestinationResolver">
        <property name = "jndiTemplate">
            <ref bean = "jndiTemplate"/>
        </property>
    </bean>
    
     <bean id = "ATFJmsTemplate" class = "org.springframework.jms.core.JmsTemplate">
        <property name = "connectionFactory">
            <ref bean = "connectionFactory"/>
        </property>
        <property name = "destinationResolver">
            <ref bean = "jmsDestinationResolver"/>
        </property>
        <property name = "messageConverter">
            <ref bean = "messageConverter"/>
        </property>
        <property name = "sessionAcknowledgeMode" value = "2"/>
        <property name = "receiveTimeout">
            <value>-1</value>
        </property>
    </bean>
    
    <bean id = "messageConverter" class = "com.example.jms.message.MyMessageConverter" />
    
     <bean id = "atfQueue" class = "org.springframework.jndi.JndiObjectFactoryBean" >
        <property name = "jndiTemplate">
            <ref bean = "jndiTemplate"/>
        </property>
        <property name = "jndiName">
            <value>queue/ATFQueue</value>
        </property>
    </bean>
    
    <bean id = "bdQueue" class = "org.springframework.jndi.JndiObjectFactoryBean" >
        <property name = "jndiTemplate">
            <ref bean = "jndiTemplate"/>
        </property>
        <property name = "jndiName">
            <value>queue/BDQueue</value>
        </property>
    </bean>
    
    
    <bean id = "atfQueueMDP" class = "org.springframework.jms.listener.DefaultMessageListenerContainer" >
        <property name = "concurrentConsumers" value = "20"/>
        <property name = "connectionFactory" ref = "connectionFactory"/>
        <property name = "destination" ref = "atfQueue"/>
        <property name = "messageListener" ref = "messageListener"/>
        <property name = "sessionAcknowledgeMode" value = "2"/>
    </bean>
    
     <bean id = "bdQueueMDP" class = "org.springframework.jms.listener.DefaultMessageListenerContainer" >
		<property name = "concurrentConsumers" value = "20"/>
        <property name = "connectionFactory" ref = "connectionFactory"/>
        <property name = "destination" ref = "bdQueue"/>
        <property name = "messageListener" ref = "messageListener"/>
        <property name = "sessionAcknowledgeMode" value = "2"/>
    </bean>
    
    <bean id = "messageListener" class = "com.example.jms.receiver.ATFReceiver" >
    </bean>
    
    <!--
    <bean id="bDconnectionFactory" class="org.hornetq.jms.client.HornetQJMSConnectionFactory">
    	<constructor-arg value="false"/>
	    <constructor-arg>
	        <bean name="transportConfiguration" class="org.hornetq.api.core.TransportConfiguration">
	            <constructor-arg value="org.hornetq.core.remoting.impl.netty.NettyConnectorFactory" />
	            <constructor-arg>
	                <map key-type="java.lang.String" value-type="java.lang.Object">
	                    <entry key="host" value="127.0.0.1" />
	                    <entry key="port" value="5445" />
	                </map>
	            </constructor-arg>
	        </bean>
	    </constructor-arg>
	 </bean>
    -->
     <bean id = "BDJmsTemplate" class = "org.springframework.jms.core.JmsTemplate">
        <property name = "connectionFactory">
            <ref bean = "connectionFactory"/>
        </property>
        <property name = "destinationResolver">
            <ref bean = "jmsDestinationResolver"/>
        </property>
        <property name = "messageConverter">
            <ref bean = "messageConverter"/>
        </property>
        <property name = "sessionAcknowledgeMode" value = "2"/>
        <property name = "receiveTimeout">
            <value>-1</value>
        </property>
    </bean>
</beans>